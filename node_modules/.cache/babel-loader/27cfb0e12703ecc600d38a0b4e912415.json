{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amari\\\\Desktop\\\\Personal code\\\\React-JS Portfolio project\\\\react-portfolio\\\\src\\\\components\\\\Contact\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Loader from 'react-loaders';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useRef } from 'react';\nimport emailjs from '@emailjs/browser';\nimport AnimatedLetters from '../AnimatedLetters';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const form = useRef();\n  const sendEmail = e => {\n    e.preventDefault();\n    emailjs.sendForm('gmail', 'template_YeJhZkgb', form.current, 'your-token').then(() => {\n      alert('Message successfully sent!');\n      window.location.reload(false);\n    }, () => {\n      alert('Failed to send the message, please try again');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container contact-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zone\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n            letterClass: letterClass,\n            strArray: ['C', 'o', 'n', 't', 'a', 'c', 't', ' ', 'm', 'e'],\n            idx: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I am interested in freelance opportunities - especially on ambitious or large projects. However, if you have any other requests or questions, don't hesitate to contact me using below form either.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Contact, \"+RrDYwqI2IOKCjAw6UiJbZDStw8=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useEffect","useState","Loader","MapContainer","TileLayer","Marker","Popup","useRef","emailjs","AnimatedLetters","Contact","letterClass","setLetterClass","form","sendEmail","e","preventDefault","sendForm","current","then","alert","window","location","reload"],"sources":["C:/Users/amari/Desktop/Personal code/React-JS Portfolio project/react-portfolio/src/components/Contact/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Loader from 'react-loaders'\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport { useRef } from 'react'\r\nimport emailjs from '@emailjs/browser'\r\nimport AnimatedLetters from '../AnimatedLetters'\r\nimport './index.scss'\r\n\r\nconst Contact = () => {\r\n  const [letterClass, setLetterClass] = useState('text-animate')\r\n  const form = useRef()\r\n\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault()\r\n\r\n    emailjs\r\n      .sendForm('gmail', 'template_YeJhZkgb', form.current, 'your-token')\r\n      .then(\r\n        () => {\r\n          alert('Message successfully sent!')\r\n          window.location.reload(false)\r\n        },\r\n        () => {\r\n          alert('Failed to send the message, please try again')\r\n        }\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container contact-page\">\r\n        <div className=\"text-zone\">\r\n          <h1>\r\n            <AnimatedLetters\r\n              letterClass={letterClass}\r\n              strArray={['C', 'o', 'n', 't', 'a', 'c', 't', ' ', 'm', 'e']}\r\n              idx={15}\r\n            />\r\n          </h1>\r\n          <p>\r\n            I am interested in freelance opportunities - especially on ambitious\r\n            or large projects. However, if you have any other requests or\r\n            questions, don't hesitate to contact me using below form either.\r\n          </p>\r\n          \r\n        </div>\r\n       \r\n        \r\n      </div>\r\n      <Loader type=\"pacman\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,SAASC,MAAM,QAAQ,OAAO;AAC9B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAO,cAAc;AAAA;AAAA;AAErB,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EAC9D,MAAMY,IAAI,GAAGN,MAAM,EAAE;EAGrB,MAAMO,SAAS,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,EAAE;IAElBR,OAAO,CACJS,QAAQ,CAAC,OAAO,EAAE,mBAAmB,EAAEJ,IAAI,CAACK,OAAO,EAAE,YAAY,CAAC,CAClEC,IAAI,CACH,MAAM;MACJC,KAAK,CAAC,4BAA4B,CAAC;MACnCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;IAC/B,CAAC,EACD,MAAM;MACJH,KAAK,CAAC,8CAA8C,CAAC;IACvD,CAAC,CACF;EACL,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,wBAAwB;MAAA,uBACrC;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAA,uBACE,QAAC,eAAe;YACd,WAAW,EAAET,WAAY;YACzB,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE;YAC7D,GAAG,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA;QACR;UAAA;UAAA;UAAA;QAAA,QACC,eACL;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAII;MAAA;QAAA;QAAA;QAAA;MAAA;IAEA;MAAA;MAAA;MAAA;IAAA,QAGF,eACN,QAAC,MAAM;MAAC,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACvB;AAEP,CAAC;AAAA,GA7CKD,OAAO;AAAA,KAAPA,OAAO;AA+Cb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}